nombres_sec$prob<-nombres_sec$n/nombres_sec$total
nombres_sec<-bind_tf_idf(nombres_sec, ap, mujer, n)
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer, sum)
names(n_nombres)<-c('ap', 'mujer', 'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap, sum)
names(n_total)<-c('ap', 'total')
nombres_sec<-merge(n_nombres, n_total, by='ap')
nombres_sec$prob<-nombres_sec$n/nombres_sec$total
nombres_sec<-bind_tf_idf(nombres_sec, ap, mujer, n)
data_cargos
data_cargos
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer+DEP, sum)
names(n_nombres)<-c('ap', 'mujer', 'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+DEP, sum)
names(n_total)<-c('ap', 'DEP', 'total')
nombres_sec<-merge(n_nombres, n_total, by=c('ap', 'DEP')
nombres_sec$prob<-nombres_sec$n/nombres_sec$total
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer+DEP, sum)
names(n_nombres)<-c('ap', 'mujer', 'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+DEP, sum)
names(n_total)<-c('ap', 'DEP', 'total')
nombres_sec<-merge(n_nombres, n_total, by=c('ap', 'DEP'))
n_nombres
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer+DEP, sum)
names(n_nombres)<-c('ap', 'mujer','DEP',  'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+DEP, sum)
names(n_total)<-c('ap', 'DEP', 'total')
nombres_sec<-merge(n_nombres, n_total, by=c('ap', 'DEP'))
nombres_sec$prob<-nombres_sec$n/nombres_sec$total
nombres_sec<-bind_tf_idf(nombres_sec, ap, mujer, n)
head(nombres_sec)
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos$NombredelCargo<-gsub(pattern = 'a ',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer+DEP, sum)
names(n_nombres)<-c('ap', 'mujer','DEP',  'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+DEP, sum)
names(n_total)<-c('ap', 'DEP', 'total')
nombres_sec<-merge(n_nombres, n_total, by=c('ap', 'DEP'))
nombres_sec$prob<-nombres_sec$n/nombres_sec$total
nombres_sec<-bind_tf_idf(nombres_sec, ap, mujer, n)
head(nombres_sec)
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos$NombredelCargo<-gsub(pattern = 'a ',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos$NombredelCargo<-gsub(pattern = 'a  ',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer+DEP, sum)
names(n_nombres)<-c('ap', 'mujer','DEP',  'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+DEP, sum)
names(n_total)<-c('ap', 'DEP', 'total')
nombres_sec<-merge(n_nombres, n_total, by=c('ap', 'DEP'))
nombres_sec$prob<-nombres_sec$n/nombres_sec$total
nombres_sec<-bind_tf_idf(nombres_sec, ap, mujer, n)
head(data_cargos)
head(nombres_sec)
head(nombres_sec$ap)
head(nombres_sec$ap, 20)
head(nombres_sec$ap, 30)
head(nombres_sec$ap, 50)
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos$NombredelCargo<-gsub(pattern = 'a ',
replacement = ' ',
as.character(data_cargos$NombredelCargo))
data_cargos$NombredelCargo<-gsub(pattern = 'a  ',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer+DEP, sum)
names(n_nombres)<-c('ap', 'mujer','DEP',  'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+DEP, sum)
names(n_total)<-c('ap', 'DEP', 'total')
nombres_sec<-merge(n_nombres, n_total, by=c('ap', 'DEP'))
nombres_sec$prob<-nombres_sec$n/nombres_sec$total
nombres_sec<-bind_tf_idf(nombres_sec, ap, mujer, n)
head(nombres_sec)
head(nombres_sec$a, 30)
head(nombres_sec$a, 50)
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer+DEP, sum)
names(n_nombres)<-c('ap', 'mujer','DEP',  'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+DEP, sum)
names(n_total)<-c('ap', 'DEP', 'total')
nombres_sec<-merge(n_nombres, n_total, by=c('ap', 'DEP'))
nombres_sec$prob<-nombres_sec$n/nombres_sec$total
nombres_sec<-bind_tf_idf(nombres_sec, ap, mujer, n)
nombres_puestos<-lapply(split(nombres_sec, list(nombres_sec$mujer, nombres_sec$DEP)),
function(x) head(x[order(x$tf_idf, decreasing=T),], 100))
nombres_puestos<-do.call(rbind.data.frame, lapply(nombres_puestos, function(x) data.frame(x, tf_idf_norm=x$tf_idf/sum(x$tf_idf))))
nombres_puestos$mujer<-ifelse(nombres_puestos$mujer, 'Trabajadoras', 'Trabajadores')
table(nombres_puestos$DEP)
ggplot(data=nombres_puestos[nombres_puestos$DEP=='SRE']) +
aes(x = 1, y = 1, size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
ggplot(data=nombres_puestos[nombres_puestos$DEP=='SRE',]) +
aes(x = 1, y = 1, size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
for i in (uninque(nombres_puestos$DEP)){
for (i in uninque(nombres_puestos$DEP)){
plt<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = 1, y = 1, size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
ggsave(filename = paste0('plot_puestos_', i, '.png'), plot = plt, device = 'png')
for (i in uninque(nombres_puestos$DEP)){
plt<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = 1, y = 1, size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
ggsave(filename = paste0('plot_puestos_', i, '.png'), plot = plt, device = 'png')
}
for (i in unique(nombres_puestos$DEP)){
plt<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = 1, y = 1, size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
ggsave(filename = paste0('plot_puestos_', i, '.png'), plot = plt, device = 'png')
}
nombres_puestos<-lapply(split(nombres_sec, list(nombres_sec$mujer, nombres_sec$DEP)),
function(x) head(x[order(x$tf_idf, decreasing=T),], 50))
nombres_puestos<-lapply(split(nombres_sec, list(nombres_sec$mujer, nombres_sec$DEP)),
function(x) head(x[order(x$tf_idf, decreasing=T),], 50))
nombres_puestos<-do.call(rbind.data.frame, lapply(nombres_puestos, function(x) data.frame(x, tf_idf_norm=x$tf_idf/sum(x$tf_idf))))
nombres_puestos$mujer<-ifelse(nombres_puestos$mujer, 'Trabajadoras', 'Trabajadores')
nombres_puestos<-lapply(split(nombres_sec, list(nombres_sec$mujer, nombres_sec$DEP)),
function(x) head(x[order(x$tf_idf, decreasing=T),], 50))
nombres_puestos<-do.call(rbind.data.frame, lapply(nombres_puestos, function(x) data.frame(x, tf_idf_norm=x$tf_idf/sum(x$tf_idf))))
nombres_puestos$mujer<-ifelse(nombres_puestos$mujer, 'Trabajadoras', 'Trabajadores')
for (i in unique(nombres_puestos$DEP)){
plt<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = 1, y = 1, size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
ggsave(filename = paste0('plot_puestos_', i, '.png'), plot = plt, device = 'png')
}
nombres_puestos<-lapply(split(nombres_sec, list(nombres_sec$mujer, nombres_sec$DEP)),
function(x) head(x[order(x$tf_idf, decreasing=T),], 20))
nombres_puestos<-do.call(rbind.data.frame, lapply(nombres_puestos, function(x) data.frame(x, tf_idf_norm=x$tf_idf/sum(x$tf_idf))))
nombres_puestos$mujer<-ifelse(nombres_puestos$mujer, 'Trabajadoras', 'Trabajadores')
for (i in unique(nombres_puestos$DEP)){
plt<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = 1, y = 1, size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
ggsave(filename = paste0('plot_puestos_', i, '.png'), plot = plt, device = 'png')
}
#
data_cargos<-data
data_cargos$NombredelCargo<-trimws(iconv(tolower(data_cargos$NombredelCargo), to = "ASCII//TRANSLIT"), which = 'both')
data_cargos$NombredelCargo<-gsub(pattern = '[0-9]+',
replacement = '',
as.character(data_cargos$NombredelCargo))
data_cargos$NombredelCargo<-gsub('[[:punct:] ]+',' ',as.character(data_cargos$NombredelCargo))
data_cargos<-unnest_tokens(tbl = data_cargos, input=NombredelCargo, output = ap)
#data_cargos$ap<-wordStem(data_cargos$ap, language = 'es')
n_nombres<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+mujer+DEP, sum)
names(n_nombres)<-c('ap', 'mujer','DEP',  'n')
n_total<-aggregate(data=data_cargos, rep(1, nrow(data_cargos))~ap+DEP, sum)
names(n_total)<-c('ap', 'DEP', 'total')
nombres_sec<-merge(n_nombres, n_total, by=c('ap', 'DEP'))
nombres_sec$prob<-nombres_sec$n/nombres_sec$total
nombres_sec<-bind_tf_idf(nombres_sec, ap, mujer, n)
nombres_puestos<-lapply(split(nombres_sec, list(nombres_sec$mujer, nombres_sec$DEP)),
function(x) head(x[order(x$tf_idf, decreasing=T),], 20))
nombres_puestos<-do.call(rbind.data.frame, lapply(nombres_puestos, function(x) data.frame(x, tf_idf_norm=x$tf_idf/sum(x$tf_idf))))
nombres_puestos$mujer<-ifelse(nombres_puestos$mujer, 'Trabajadoras', 'Trabajadores')
for (i in unique(nombres_puestos$DEP)){
plt<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = 1, y = 1, size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
ggsave(filename = paste0('plot_puestos_', i, '.png'), plot = plt, device = 'png',
width = 18, height = 18)
}
for (i in unique(nombres_puestos$DEP)){
plt<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = abs(tf_idf_norm)+1, y = abs(tf_idf_norm)+1,
size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
ggsave(filename = paste0('plot_puestos_', i, '.png'), plot = plt, device = 'png',
width = 18, height = 18)
}
for (i in c('PGR','SEDESOL', 'SSA' )){
plt<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = abs(tf_idf_norm)+1, y = abs(tf_idf_norm)+1,
size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
plt
}
sueldos<-aggregate(data=data, TotalNetasRecode~PuestoReferencia+mujer, function(x) c(mean(x), sd(x), length(x)))
sueldos<-do.call(cbind.data.frame,sueldos )
names(sueldos)<-c('PuestoReferencia', 'mujer','media', 'sd', 'n')
sueldos$ub<-sueldos$media+(sueldos$sd/sqrt(sueldos$n))
sueldos$lb<-sueldos$media-(sueldos$sd/sqrt(sueldos$n))
sueldos$PuestoReferencia<-factor(sueldos$PuestoReferencia, levels=puestos)
dif_porc<-dcast(sueldos, PuestoReferencia+DEP~mujer, value.var='media')
dif_porc<-dcast(sueldos, PuestoReferencia~mujer, value.var='media')
dif_porc<-dif_porc[!dif_porc$PuestoReferencia %in% c("", "OFICIAL MAYOR" , "SECRETARIO DE ESTADO" ,
"PRESIDENTE DE LA REPÚBLICA" ),]
names(dif_porc)<-c('Puesto', 'Hombre', 'Mujer')
dif_porc$dif<-(dif_porc$Hombre-dif_porc$Mujer)/dif_porc$Hombre*100
dif_porc$signo<-ifelse(dif_porc$dif>0, 'Hombres ganan más', 'Mujeres ganan más')
levels(dif_porc$Puesto)<-c('Enlace', 'Jefe. D.', 'Subir.', '',
'DA', 'DGA','DG','JU','OM', 'Subsec.',
'Srio.', 'Presi')
dif_porc
sueldos<-aggregate(data=data, TotalNetasRecode~PuestoReferencia+mujer, function(x) c(mean(x), sd(x), length(x)))
sueldos<-do.call(cbind.data.frame,sueldos )
names(sueldos)<-c('PuestoReferencia', 'mujer','media', 'sd', 'n')
sueldos$ub<-sueldos$media+(sueldos$sd/sqrt(sueldos$n))
sueldos$lb<-sueldos$media-(sueldos$sd/sqrt(sueldos$n))
sueldos$PuestoReferencia<-factor(sueldos$PuestoReferencia, levels=puestos)
dif_porc<-dcast(sueldos, PuestoReferencia~mujer, value.var='media')
#dif_porc<-dif_porc[!dif_porc$PuestoReferencia %in% c("", "OFICIAL MAYOR" , "SECRETARIO DE ESTADO" #,
#                                          "PRESIDENTE DE LA REPÚBLICA" ),]
#names(dif_porc)<-c('Puesto', 'Hombre', 'Mujer')
#dif_porc$dif<-(dif_porc$Hombre-dif_porc$Mujer)/dif_porc$Hombre*100
#
#dif_porc$signo<-ifelse(dif_porc$dif>0, 'Hombres ganan más', 'Mujeres ganan más')
#
#
#levels(dif_porc$Puesto)<-c('Enlace', 'Jefe. D.', 'Subir.', '',
#                           'DA', 'DGA','DG','JU','OM', 'Subsec.',
#                           'Srio.', 'Presi')
#
dif_porc
sueldos<-aggregate(data=data, TotalNetasRecode~PuestoReferencia+mujer, function(x) c(median(x), sd(x), length(x)))
sueldos<-do.call(cbind.data.frame,sueldos )
names(sueldos)<-c('PuestoReferencia', 'mujer','media', 'sd', 'n')
sueldos$ub<-sueldos$media+(sueldos$sd/sqrt(sueldos$n))
sueldos$lb<-sueldos$media-(sueldos$sd/sqrt(sueldos$n))
sueldos$PuestoReferencia<-factor(sueldos$PuestoReferencia, levels=puestos)
dif_porc<-dcast(sueldos, PuestoReferencia~mujer, value.var='media')
#dif_porc<-dif_porc[!dif_porc$PuestoReferencia %in% c("", "OFICIAL MAYOR" , "SECRETARIO DE ESTADO" #,
#                                          "PRESIDENTE DE LA REPÚBLICA" ),]
#names(dif_porc)<-c('Puesto', 'Hombre', 'Mujer')
#dif_porc$dif<-(dif_porc$Hombre-dif_porc$Mujer)/dif_porc$Hombre*100
#
#dif_porc$signo<-ifelse(dif_porc$dif>0, 'Hombres ganan más', 'Mujeres ganan más')
#
#
#levels(dif_porc$Puesto)<-c('Enlace', 'Jefe. D.', 'Subir.', '',
#                           'DA', 'DGA','DG','JU','OM', 'Subsec.',
#                           'Srio.', 'Presi')
#
dif_porc
sueldos<-aggregate(data=data, TotalNetasRecode~PuestoReferencia+mujer, function(x) c(mean(x), sd(x), length(x)))
sueldos<-do.call(cbind.data.frame,sueldos )
names(sueldos)<-c('PuestoReferencia', 'mujer','media', 'sd', 'n')
sueldos$ub<-sueldos$media+(sueldos$sd/sqrt(sueldos$n))
sueldos$lb<-sueldos$media-(sueldos$sd/sqrt(sueldos$n))
sueldos$PuestoReferencia<-factor(sueldos$PuestoReferencia, levels=puestos)
dif_porc<-dcast(sueldos, PuestoReferencia~mujer, value.var='media')
#dif_porc<-dif_porc[!dif_porc$PuestoReferencia %in% c("", "OFICIAL MAYOR" , "SECRETARIO DE ESTADO" #,
#                                          "PRESIDENTE DE LA REPÚBLICA" ),]
#names(dif_porc)<-c('Puesto', 'Hombre', 'Mujer')
#dif_porc$dif<-(dif_porc$Hombre-dif_porc$Mujer)/dif_porc$Hombre*100
#
#dif_porc$signo<-ifelse(dif_porc$dif>0, 'Hombres ganan más', 'Mujeres ganan más')
#
#
#levels(dif_porc$Puesto)<-c('Enlace', 'Jefe. D.', 'Subir.', '',
#                           'DA', 'DGA','DG','JU','OM', 'Subsec.',
#                           'Srio.', 'Presi')
#
dif_porc
sueldos<-aggregate(data=data, TotalNetasRecode~PuestoReferencia+DEP+mujer, function(x) c(mean(x), sd(x), length(x)))
sueldos<-do.call(cbind.data.frame,sueldos )
names(sueldos)<-c('PuestoReferencia','DEP', 'mujer','media', 'sd', 'n')
sueldos$ub<-sueldos$media+(sueldos$sd/sqrt(sueldos$n))
sueldos$lb<-sueldos$media-(sueldos$sd/sqrt(sueldos$n))
sueldos$PuestoReferencia<-factor(sueldos$PuestoReferencia, levels=puestos)
dif_porc<-dcast(sueldos, PuestoReferencia+DEP~mujer, value.var='media')
dif_porc<-dif_porc[!dif_porc$PuestoReferencia %in% c("", "OFICIAL MAYOR" , "SECRETARIO DE ESTADO" ,
"PRESIDENTE DE LA REPÚBLICA" ),]
names(dif_porc)<-c('Puesto','Dependencia', 'Hombre', 'Mujer')
dif_porc$dif<-(dif_porc$Hombre-dif_porc$Mujer)/dif_porc$Hombre*100
dif_porc$signo<-ifelse(dif_porc$dif>0, 'Hombres ganan más', 'Mujeres ganan más')
dif_porc<-dif_porc[!dif_porc$Dependencia %in% c('SEDENA', 'SEMAR'),]
levels(dif_porc$Puesto)<-c('Enlace', 'Jefe. D.', 'Subir.', '',
'DA', 'DGA','DG','JU','OM', 'Subsec.',
'Srio.', 'Presi')
ggplot(data = dif_porc,
aes(x=Puesto, y=dif, fill=signo))+
geom_bar(stat = 'identity')+
geom_text(aes(x=Puesto, y=dif+1, label=paste0(round(dif), "%")), size=5,
position = position_dodge(width = 0.5))+
geom_hline(yintercept = 0)+
facet_wrap('Dependencia')+
theme_classic()+
theme(text = element_text(size = 20), axis.title = element_blank(), axis.text.x = element_text(angle = -45),
axis.text.y = element_blank(), legend.title = element_blank(), legend.position = 'top')+
ggtitle('Diferencia porcentual de salarios \n Por secretaría y puesto de referencia', subtitle = 'Hombres-Mujeres')
ggplot(data=prob_mujer, aes(x=PuestoReferencia, y=prob, group=jefe_mujer, fill=jefe_mujer))+
geom_bar(stat = 'identity', position = position_dodge())+
labs(title='Probabilidad de contratar a una mujer',
subtitle = 'por género del sexo del puesto superior',
caption='\t\t\tSólo se incluyen empleados cuyo puesto superior es identificable')+
geom_text(aes(x=PuestoReferencia,, group=jefe_mujer, y=prob+1, label=paste0(round(prob), "%")), size=5,
position = position_dodge(width = 1))+
theme_classic()+
scale_fill_manual(labels = c('Jefe', 'Jefa'), values = c('blue', 'red'))+
theme(text = element_text(size = 20),
axis.title = element_blank(),
axis.text.x = element_text(angle = -90), legend.title = element_blank())
prob_mujer
prob_mujer
ggplot(data=prob_mujer, aes(x=PuestoReferencia, y=prob, group=jefe_mujer, fill=jefe_mujer))+
geom_bar(stat = 'identity', position = position_dodge())
ggplot(data=prob_mujer, aes(x=PuestoReferencia, y=prob, group=jefe_mujer, fill=jefe_mujer))+
geom_bar(stat = 'identity', position = position_dodge())+
labs(title='Probabilidad de contratar a una mujer',
subtitle = 'por género del sexo del puesto superior',
caption='\t\t\tSólo se incluyen empleados cuyo puesto superior es identificable')+
geom_text(aes(x=PuestoReferencia,, group=jefe_mujer, y=prob+1, label=paste0(round(prob), "%")), size=5,
position = position_dodge(width = 1))
ggplot(data=prob_mujer, aes(x=PuestoReferencia, y=prob, group=jefe_mujer, fill=jefe_mujer))+
geom_bar(stat = 'identity', position = position_dodge())+
labs(title='Probabilidad de contratar a una mujer',
subtitle = 'por género del sexo del puesto superior',
caption='\t\t\tSólo se incluyen empleados cuyo puesto superior es identificable')+
geom_text(aes(x=PuestoReferencia,, group=jefe_mujer, y=prob+1, label=paste0(round(prob), "%")), size=5,position = position_dodge(width = 1))
ggplot(data=prob_mujer, aes(x=PuestoReferencia, y=prob, group=jefe_mujer, fill=jefe_mujer))+
geom_bar(stat = 'identity', position = position_dodge())+
labs(title='Probabilidad de contratar a una mujer',
subtitle = 'por género del sexo del puesto superior',
caption='\t\t\tSólo se incluyen empleados cuyo puesto superior es identificable')
geom_text(aes(x=PuestoReferencia,, group=jefe_mujer, y=prob+1, label=paste0(round(prob), "%")), size=5,position = position_dodge(width = 1))
ggplot(data=prob_mujer, aes(x=PuestoReferencia, y=prob, group=jefe_mujer, fill=jefe_mujer))+
geom_bar(stat = 'identity', position = position_dodge())+
labs(title='Probabilidad de contratar a una mujer',
subtitle = 'por género del sexo del puesto superior',
caption='\t\t\tSólo se incluyen empleados cuyo puesto superior es identificable')+
geom_text(aes(x=PuestoReferencia, group=jefe_mujer, y=prob+1, label=paste0(round(prob), "%")), size=5,position = position_dodge(width = 1))+
theme_classic()+
scale_fill_manual(labels = c('Jefe', 'Jefa'), values = c('blue', 'red'))+
theme(text = element_text(size = 20),
axis.title = element_blank(),
axis.text.x = element_text(angle = -90), legend.title = element_blank())
plt<-list()
for (i in c('PGR','SEDESOL', 'SSA' )){
plt[i]<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = abs(tf_idf_norm)+1, y = abs(tf_idf_norm)+1,
size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
}
plt[[1]]
plt<-list()
for (i in c('PGR','SEDESOL', 'SSA' )){
plt[i]<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = abs(tf_idf_norm)+1, y = abs(tf_idf_norm)+1,
size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
}
plt[[1]]
plt['PGR']
plt['PGR'][[1]]
plt<-list()
for (i in c('PGR','SEDESOL', 'SSA' )){
plt[i]<-ggplot(data=nombres_puestos[nombres_puestos$DEP==i,]) +
aes(x = abs(tf_idf_norm)+1, y = abs(tf_idf_norm)+1,
size = tf_idf_norm, label = ap, color=mujer) +
geom_text_repel(segment.size = 0, force = 150) +
scale_size(range = c(5, 15), guide = FALSE) +
scale_y_continuous(breaks = NULL) +
scale_x_continuous(breaks = NULL) +
labs(x = '', y = '') +
theme_classic()+
theme(legend.position = 'none', text = element_text(size=20))+
facet_wrap(~mujer)
}
ggplot(data=nombres_puestos[nombres_puestos$DEP==i,])
